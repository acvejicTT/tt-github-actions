name: 'System Telemetry Collector'
description: 'Collects system statistics from /proc and displays them as charts'
author: 'Tenstorrent'

inputs:
  proc_path:
    description: 'Path to the proc folder (e.g., /host/proc)'
    required: true
    default: '/proc'
  sampling_rate:
    description: 'Sampling rate in seconds'
    required: false
    default: '5'
  generate_chart:
    description: 'Generate charts in GitHub job summary'
    required: false
    default: 'true'
  start_collection:
    description: 'Start telemetry collection'
    required: false
  finish_collection:
    description: 'Finish telemetry collection'
    required: false
  telemetry_path:
    description: 'Path to the telemetry data'
    required: false
    default: 'telemetry'

runs:
  using: 'composite'
  steps:

    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.10'

    - name: Start telemetry collection
      if: ${{ inputs.start_collection }}
      shell: bash
      run: |
        pip install -r ${{ github.action_path }}/requirements.txt
        echo "Starting telemetry collection process..."
        mkdir -p "${{ inputs.telemetry_path }}"
        nohup python ${{ github.action_path }}/collect_telemetry.py \
          --proc-path "${{ inputs.proc_path }}" \
          --sampling-rate "${{ inputs.sampling_rate }}" \
          --output-file "${{ inputs.telemetry_path }}/telemetry_data.jsonl" > ${{ inputs.telemetry_path }}/telemetry.log 2>&1 &
        echo "TELEMETRY_PID=$!" >> $GITHUB_ENV
        echo "Telemetry collection started with PID: $!"

    - name: Finish telemetry collection
      if: ${{ inputs.finish_collection }}
      shell: bash
      run: |
        echo "Stopping telemetry collection process..."
        if [ -n "$TELEMETRY_PID" ]; then
          kill $TELEMETRY_PID || true
          echo "Process with PID $TELEMETRY_PID terminated"
        fi

        python ${{ github.action_path }}/process_telemetry.py \
          --input-file "${{ inputs.telemetry_path }}/telemetry_data.jsonl" \
          --generate-chart "${{ inputs.generate_chart }}" \
          --github-summary "${{ inputs.telemetry_path }}/summary.md"

        echo "## System Telemetry Results" >> $GITHUB_STEP_SUMMARY
        cat "${{ inputs.telemetry_path }}/summary.md" >> $GITHUB_STEP_SUMMARY
